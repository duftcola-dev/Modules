version: '3.9'

networks:
  services_network:
    name: services_network
  default:
    name: default_network

services:

  mongo:
    image: mongo:latest
    container_name: mongo_service
    ports:
      - 27017:27017
    user: root
    volumes: 
      - ./mongo:/data/mongodb    
      - ./mongo/logs:/var/logs/mongodb
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root

  mongo_express:
    image: mongo-express:latest
    container_name : mongo_express
    restart : always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=root
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_SERVER=mongo
    networks:
      - services_network

  redis:
    image: redis:latest
    command: redis-server --save 1 60 --loglevel warning --requirepass root
    container_name : redis_service
    ports:
      - 6379:6379
    volumes:
      - chache:/data 
    networks:
      - services_network
      
  mysql:
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    container_name: mysql_service
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: test
      MYSQL_USER: user 
      MYSQL_PASSWORD : user
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./mysql:/var/lib/mysql
    networks:
      - services_network

  adminer:
    image: adminer 
    ports:
      - 8000:8000

volumes:
  chache:
    driver: local
  mysql:
    driver: local
  mongo:
    driver: local